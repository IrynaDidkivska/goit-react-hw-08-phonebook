{"version":3,"file":"static/js/778.ce915b7a.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactForm.styled.js","components/ContactsForm/ContactForm.jsx","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  border: 1px solid black;\n  padding: 20px 30px;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  margin-top: 5px;\n  padding: 5px;\n`;\n","import React from 'react';\nimport { Form, Input } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addNewContact } from 'redux/contactsSlice/operations';\nimport { Button } from 'styles/Button';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  //додаємо до списку\n  const hendleFormSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      toast.error(`Invalid value!`);\n      return;\n    }\n\n    // Перевіряє, чи існує контакт з таким самим ім'ям у списку контактів.\n    const existingContact = contacts.find(contact => contact.name === name);\n    if (existingContact) {\n      toast.warning(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addNewContact({ name, number }));\n    toast.success(`Contact ${name} successfully added!`);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={hendleFormSubmit}>\n      <label htmlFor=\"name\">\n        Name\n        <Input\n          value={name}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          placeholder=\"Name Surname\"\n          autoFocus\n        />\n      </label>\n      <label htmlFor=\"number\">\n        Number\n        <Input\n          value={number}\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={e => {\n            setNumber(e.target.value);\n          }}\n          placeholder=\"Phone Number\"\n        />\n      </label>\n      <Button>Add contact</Button>\n    </Form>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n`;\n\nexport const Contact = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\nexport const Button = styled.button`\n  max-width: 100px;\n  height: auto;\n  margin: 0 auto;\n  padding: 5px 10px;\n  cursor: pointer;\n  border-radius: 5px;\n  border: none;\n  font-weight: 600;\n  transition: all 300ms linear;\n  &:hover {\n    scale: 1.1;\n    background-color: #649eff;\n  }\n`;\n","import React from 'react';\n\nimport { Contact, List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/contactsSlice/operations';\nimport { Button } from 'styles/Button';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = (id, name) => {\n    dispatch(deleteContact(id));\n    toast.success(`Contact ${name} successfully deleted!`);\n  };\n\n  //фільтруємо;\n  const getFilteredContact = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredData = getFilteredContact();\n\n  return (\n    <>\n      <List>\n        {filteredData.map(contact => (\n          <Contact key={contact.id}>\n            <p>{contact.name} : </p>\n            <p> {contact.number}</p>\n            <Button\n              onClick={() => {\n                handleDelete(contact.id, contact.name);\n              }}\n            >\n              Delete\n            </Button>\n          </Contact>\n        ))}\n      </List>\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const LabelFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  margin-top: 5px;\n  padding: 5px;\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\n`;\n","import React from 'react';\nimport { Input, LabelFilter } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contactsSlice/contactsSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <LabelFilter htmlFor=\"filter\">\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          onChange={({ target }) => dispatch(filterContact(target.value))}\n        />\n      </LabelFilter>\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: #51565a;\n  text-align: center;\n  background: linear-gradient(\n    289.17deg,\n    #c8bdff -50.13%,\n    #b5edff -5.03%,\n    #00cbff 30.57%,\n    #6721ff 73.85%,\n    #c8bdff 112.65%\n  );\n  background-clip: text;\n  background-size: 100%;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nexport const StyledTitle = styled.h3`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: #51565a;\n  text-align: center;\n  background: linear-gradient(\n    289.17deg,\n    #c8bdff -50.13%,\n    #b5edff -5.03%,\n    #00cbff 30.57%,\n    #6721ff 73.85%,\n    #c8bdff 112.65%\n  );\n  background-clip: text;\n  background-size: 100%;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n","import React, { useEffect } from 'react';\n\nimport { ContactForm } from 'components/ContactsForm/ContactForm';\nimport { ContactList } from 'components/ContactsList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading, selectLogin, selectUser } from 'redux/selectors';\nimport { StyledTitle, Title, Wrapper } from 'pages/Contacts/Contacts.styled';\nimport { fetchContacts } from 'redux/contactsSlice/operations';\n\nconst Contacts = () => {\n  const { name } = useSelector(selectUser);\n  const loading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const isLogin = useSelector(selectLogin);\n\n  useEffect(() => {\n    isLogin && dispatch(fetchContacts());\n  }, [dispatch, isLogin]);\n\n  return (\n    <Wrapper>\n      <StyledTitle>\n        Welcome, {name}! Create contacts to your heart's content.\n      </StyledTitle>\n      <Title>Chronicle of Connections</Title>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {loading ? <Loader /> : <ContactList />}\n    </Wrapper>\n  );\n};\nexport default Contacts;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","trim","find","contact","toast","concat","addNewContact","children","htmlFor","_jsx","value","id","type","pattern","title","required","onChange","target","placeholder","autoFocus","Button","List","Contact","ContactList","_templateObject3","filter","selectFilter","filteredData","toLowerCase","includes","_Fragment","map","onClick","deleteContact","LabelFilter","Filter","_ref","filterContact","Wrapper","Title","StyledTitle","selectUser","loading","selectIsLoading","isLogin","selectLogin","useEffect","fetchContacts","Loader"],"sourceRoot":""}